{"ast":null,"code":"import _regeneratorRuntime from \"/Users/user/Desktop/react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/user/Desktop/react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/user/Desktop/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/user/Desktop/react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/user/Desktop/react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/user/Desktop/react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/user/Desktop/react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/user/Desktop/react-app/src/App.js\";\nimport React from 'react';\nimport Info from './components/info';\nimport Form from './components/form';\nimport Weather from './components/weather';\nvar API_KEY = '7ce43c31605c981d0a926c93cb1e6a02';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      error: undefined\n    };\n\n    _this.gettingWeather =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var city, api_url, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                city = e.target.elements.city.value;\n                _context.next = 4;\n                return fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n\n              case 4:\n                api_url = _context.sent;\n                _context.next = 7;\n                return api_url.json();\n\n              case 7:\n                data = _context.sent;\n\n                if (city) {\n                  _this.setState({\n                    temp: data.main.temp,\n                    city: data.name,\n                    country: data.sys.country,\n                    sunrise: data.sys.sunrise,\n                    sunset: data.sys.sunset,\n                    error: ''\n                  });\n                }\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Info, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \" \"), React.createElement(Form, {\n        weatherMethod: this.gettingWeather.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(Weather, {\n        temp: this.state.temp,\n        city: this.state.city,\n        country: this.state.country,\n        sunrise: this.state.sunrise,\n        sunset: this.state.sunset,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/user/Desktop/react-app/src/App.js"],"names":["React","Info","Form","Weather","API_KEY","App","state","temp","undefined","city","country","sunrise","sunset","error","gettingWeather","e","preventDefault","target","elements","value","fetch","api_url","json","data","setState","main","name","sys","bind","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,IAAMC,OAAO,GAAG,kCAAhB;;IAEOC,G;;;;;;;;;;;;;;;;;UACHC,K,GAAQ;AACNC,MAAAA,IAAI,EAAEC,SADA;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,OAAO,EAAEF,SAHH;AAING,MAAAA,OAAO,EAAEH,SAJH;AAKNI,MAAAA,MAAM,EAAEJ,SALF;AAMNK,MAAAA,KAAK,EAAEL;AAND,K;;UASVM,c;;;;;+BAAiB,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbA,gBAAAA,CAAC,CAACC,cAAF;AACMP,gBAAAA,IAFO,GAEAM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAFvB;AAAA;AAAA,uBAGSC,KAAK,6DAAsDX,IAAtD,oBAAoEL,OAApE,mBAHd;;AAAA;AAGPiB,gBAAAA,OAHO;AAAA;AAAA,uBAIMA,OAAO,CAACC,IAAR,EAJN;;AAAA;AAIPC,gBAAAA,IAJO;;AAMb,oBAAGd,IAAH,EAAS;AACP,wBAAKe,QAAL,CAAc;AACZjB,oBAAAA,IAAI,EAAEgB,IAAI,CAACE,IAAL,CAAUlB,IADJ;AAEZE,oBAAAA,IAAI,EAAEc,IAAI,CAACG,IAFC;AAGZhB,oBAAAA,OAAO,EAAEa,IAAI,CAACI,GAAL,CAASjB,OAHN;AAIZC,oBAAAA,OAAO,EAAEY,IAAI,CAACI,GAAL,CAAShB,OAJN;AAKZC,oBAAAA,MAAM,EAAEW,IAAI,CAACI,GAAL,CAASf,MALL;AAMZC,oBAAAA,KAAK,EAAE;AANK,mBAAd;AAQD;;AAfY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAmBT;AACN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,IAAD;AAAM,QAAA,aAAa,EAAE,KAAKC,cAAL,CAAoBc,IAApB,CAAyB,IAAzB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,OAAD;AACE,QAAA,IAAI,EAAE,KAAKtB,KAAL,CAAWC,IADnB;AAEE,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,IAFnB;AAGE,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,OAHtB;AAIE,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,OAJtB;AAKE,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MALrB;AAME,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,KANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAcD;;;;EA5CgBb,KAAK,CAAC6B,S;;AA8CzB,eAAexB,GAAf","sourcesContent":["import React from 'react';\nimport Info from './components/info';\nimport Form from './components/form';\nimport Weather from './components/weather';\n\nconst API_KEY = '7ce43c31605c981d0a926c93cb1e6a02';\n\n class App extends React.Component{\n    state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      error: undefined\n    }\n\n  gettingWeather = async (e) => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const api_url = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\n      const data = await api_url.json();\n\n      if(city) {\n        this.setState({\n          temp: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          error: ''\n        });\n      }\n      \n  }\n\n  render(){\n    return(\n      <div>\n        <Info> </Info>\n        <Form weatherMethod={this.gettingWeather.bind(this)}></Form>\n        <Weather\n          temp={this.state.temp}\n          city={this.state.city}\n          country={this.state.country}\n          sunrise={this.state.sunrise}\n          sunset={this.state.sunset}\n          error={this.state.error}\n        ></Weather>\n      </div>\n    )\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}